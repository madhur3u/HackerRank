// https://www.hackerrank.com/challenges/die-hard-3/

import java.io.*;
import java.util.*;

public class Solution {
    public static void main(String[] args) {

        Scanner scn = new Scanner(System.in);
        int q = scn.nextInt();
        for (int p = 1; p<=q; p++){
            int a = scn.nextInt();                          // a and b are capacity of 1st 2 jugs
            int b = scn.nextInt();
            int c = scn.nextInt();                          // TASK is to fill any jug a,b with exactly c lt of water
            
            if(c<=Math.max(a,b) && c % gcd(a,b)==0)         // c should be less than or equal to capacity of biggest jug and should be a multiple of gcd(a,b)         
                System.out.println("YES");
            
            else System.out.println("NO");
            
        }
    }
    public static int gcd(int n1, int n2){                  // fn to find GCD
        int temp = 0;
        while (n1 % n2 != 0){
            temp = n1 % n2;
            n1 = n2;
            n2 = temp;
        }
        return n2;
    }
}

/*Bezoults identity states that g= gcd(a,b) is the least positive integer that is a linear combination of a and b. 
Thus, any integer that is not a multiple of g cannot be generated by the process described which simply involved 
summation and subtraction of existing quntities (i.e a linear combination).*/
